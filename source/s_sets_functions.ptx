<section xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="s_sets_functions">
  <title>Sets and functions</title>


  <introduction>
    <!-- <p>
      We will gradually make our way to definitions of the vector spaces and linear transformations mentioned in this text's title. For now it will suffice to observe that a vector space is a certain kind of <em>set</em>, and a linear transformation is a special type of <em>function</em>. Accordingly we gather here some notions about sets and functions that will come in handy once we meet the two main players of linear algebra.
    </p> -->
    <p>
      We gather here some notions about sets and functions.
    </p>
  </introduction>
  <subsection xml:id="ss_sets">
    <title>Sets</title>

  <definition xml:id="d_sets">
    <title>Sets</title>
    <idx><h>sets</h></idx>
    <idx><h>sets</h><h>empty sets</h></idx>
    <idx><h>sets</h><h>membership</h></idx>
    <notation>
      <usage> <m>x\in A</m> </usage>
      <description>set membership</description>
    </notation>
      
      <statement>
        <p>
        A <term>set</term> is a collection of objects.
        An object <m>x</m> is a  <term>member</term> (or <term>element</term>) of a set <m>A</m> if <m>A</m> contains <m>x</m>. In this case, we write <m>x \in A</m>. If <m>x</m> is not a member of <m>A</m>, we write <m>x \notin A</m>.
        </p>
      </statement>
    </definition>
    <p>
      We use curly braces to describe the contents of a set. For example, <m>A=\{1,2,3\}</m> is the set containing the first three positive integers, and <m>B=\{1,2,3,\dots\}</m> is the set of all positive integers. The defining property of sets is that they are completely determined by their members, and nothing more. In particular, when describing sets as above, it does not matter in what order the elements are listed, nor if they are repeated: <eg />, <m>\{1,2,3\}</m>, <m>\{2,1,3\}</m>, and <m>\{2,1,1,3,2\}</m> are three descriptions of the same set. This somewhat slippery notion is made perfectly clear by specifying exactly what it means for two sets to be equal, as we do below.
    </p>
    <definition xml:id="d_set_equality">
      <title>Set equality</title>
      <idx><h>sets</h><h>equality</h></idx>
      <statement>
        <p>
        Sets <m>A</m> and <m>B</m> are <term>equal</term>, denoted <m>A=B</m>, if they have precisely the same elements:  <ie />, if for any object <m>x</m>, we have <m>x\in A</m> if and only if <m>x\in B</m>.
        </p>
      </statement>
    </definition>
    <p>
      Set membership naturally extends to a notion of one set <q>lying</q> within another.
    </p>
    <definition xml:id="d_set_inclusion">
      <title>Set inclusion (subsets)</title>
      <idx><h>sets</h><h>subset</h></idx>
      <idx><h>sets</h><h>inclusion</h></idx>
      <notation>
        <usage><m>A\subseteq B</m></usage>
        <description>set inclusion</description>
      </notation>
      <statement>
        <p>
        A set <m>A</m> is a <term>subset</term> of a set <m>B</m>, denoted <m>A \subseteq B</m>, if every member of <m>A</m> is a member of <m>B</m>:  <ie />, <m>x\in A</m> implies <m>x\in B</m> for any object <m>x</m>. The relation <m>A\subseteq B</m> is called <term>set inclusion</term>.
        </p>
      </statement>
    </definition>
        <remark xml:id="rm_equal_subset_logic">
      <p>
        The definitions of set equality and the subset relation make use of two important logical operations: namely, the <q>if and only if</q> (or <q>iff</q> for short) and <q>if-then</q> operations.
      </p>
    </remark>
    <p>
      With the fundamental notions of membership, equality, and subset in place, we now introduce means of building new sets from existing ones. The first is a manner of carving out a subset of a given set using a specified property.
    </p>
    <definition xml:id="d_set_builder_notation">
      <title>Set-builder notation</title>
      <idx><h>sets</h><h>set builder notation</h></idx>
      <statement>
        <p>
        Let <m>A</m> be a set, and let <m>P</m> be a property that elements of <m>A</m> either satisfy or do not satisfy. For an element <m>x\in A</m>, let <m>P(x)</m> denote the statement that <m>x</m> satisfies <m>P</m>.  The set of all elements of <m>A</m> satisfying <m>P</m> is denoted
        <me>
          \{x \in A \colon P(x) \}
        </me>.
        </p>
      </statement>
    </definition>
    <remark xml:id="rm_set_builder">
      <p>
        Set builder notation <sq><m>\{x \in A\colon P(x)\}</m></sq> is parsed from left to right as follows:
        <ul>
          <li>
            <p>
              <sq><m>\{</m></sq> is read as <q>the set of</q>
            </p>
          </li>
            <li>
              <p>
                <sq><m>x\in A</m></sq> is read as <q>elements of <m>A</m></q>
              </p>
            </li>
            <li>
              <p>
                <sq><m>\colon</m></sq> is read as <q>such that</q>
              </p>
            </li>
            <li>
              <p>
                <sq><m>P(x)</m></sq> is read as <q><m>P(x)</m> is true </q>.
              </p>
            </li>
        </ul>
        Taken altogether we get: <q>The set of elements of <m>A</m> such that <m>P(x)</m> is true</q>.
      </p>
    </remark>
    <example xml:id="ex_set_builder">
      <statement>
        <p>
          Let <m>A=\{0,1,2,\dots \}</m> be the set of nonnegative integers. The subset <m>B=\{0,2,4,\dots\}</m> of <em>even</em> positive integers can be described using set-builder notation as
          <me>
            B=\{x\in A\colon x \text{ is even}\}
          </me>,
          or alternatively,
          <me>
            B=\{x\in A\colon x=2k \text{ for some integer} k\}
          </me>.
            </p>
      </statement>
    </example>
    <p>
      Next we use set builder notation, the set membership relation, and some basic logic to define the union, intersection, and difference of sets.
    </p>
    <definition xml:id="d_set_operations">
      <title>Union, intersection, difference, and complement</title>
      <idx><h>sets</h><h>union</h></idx>
      <idx><h>sets</h><h>intersection</h></idx>
      <idx><h>sets</h><h>complement</h></idx>
      <idx><h>sets</h><h>difference</h></idx>
      <notation>
        <usage><m>A\cup B</m></usage>
        <description>set union</description>
      </notation>
      <notation>
        <usage><m>A\cap B</m></usage>
        <description>set intersection</description>
      </notation>
      
      <notation>
        <usage> <m>A-B</m>  </usage>
        <description>set difference</description>
      </notation>
      <notation>
        <usage><m>A^c</m></usage>
        <description>set complement</description>
      </notation>
      <statement>
        <p>
        Let <m>A</m> and <m>B</m> be subsets of a common set <m>X</m>.
        
        <ul>


          <li>
              <title>Set union</title>
            <p>
              The <term>union</term> <m>A \cup B</m> of <m>A</m> and <m>B</m> is defined as
              <me>
                A\cup B=\{x\in X\colon x\in A\text{ or } x\in B\}
              </me>.
              More generally, if <m>\{A_i\colon i\in I\}</m> is any collection of subsets <m>A_i\subseteq X</m> indexed by an arbitrary set <m>I</m>, then the <term>union</term> <m>\bigcup_{i\in I}A_i</m> of this collection is defined as
              <me>
                \bigcup_{i\in I}A_i=\{x\in X\colon x\in A_i \text{ for some } i\in I\}
              </me>.
            </p>
          </li>
          <li>
              <title>Set intersection</title>
            <p>
              The <term>intersection</term> <m>A \cap B</m> of <m>A</m> and <m>B</m> is defined as
              <me>
                A\cap B=\{x\in X\colon x\in A\text{ and } x\in B\}
              </me>.
              More generally, if <m>\{A_i\colon i\in I\}</m> is any collection of subsets <m>A_i\subseteq X</m> indexed by an arbitrary set <m>I</m>, then the <term>intersection</term> <m>\bigcap_{i\in I}A_i</m> of this collection is defined as
              <me>
                \bigcap_{i\in I}A_i=\{x\in X\colon x\in A_i \text{ for all } 1\leq i\leq n\}.
              </me>
            </p>
          </li>
          <li>
              <title>Set difference</title>
            <p>
              The <term>difference</term> <m>A-B</m> is defined as
              <me>
                A-B=\{x\in X\colon x\in A\text{ and } x\notin B\}
              </me>.
            </p>
          </li>
          <li>
            <title>Set complement</title>
            <p>
              The <term>complement</term> of <m>A</m> in <m>X</m> is defined as <m>X-A</m>. In contexts where there is clear what the larger set <m>X</m> is, we denote the complement of <m>A</m> in <m>X</m> as <m>A^c</m>.
            </p>
          </li>
        </ul>
</p>
      </statement>
    </definition>
<p>
  With the help of these set operations, we can now describe some common sets used in mathematics.
</p>
<definition xml:id="d_common_sets">
  <title>Common mathematical sets</title>
  <idx><h>sets</h><h>empty set</h></idx>
  <idx><h>real numbers</h></idx>
  <idx><h>integers</h></idx>
   <idx><h>rational numbers</h></idx>
  <notation>
    <usage><m>\{\ \}, \emptyset</m> </usage>
    <description>the empty set</description>
  </notation>
  <notation>
    <usage><m>\mathbb{R}</m></usage>
    <description>real numbers</description>
  </notation>
  <notation>
    <usage><m>\mathbb{Z}</m></usage>
    <description>integers</description>
  </notation>
  <notation>
    <usage><m>\Z_{+}</m></usage>
    <description>positive integers</description>
  </notation>
  <notation>
    <usage><m>\Z_{\geq a}</m></usage>
    <description>the set of all integers greater than or equal to <m>a</m></description>
  </notation>
  <notation>
    <usage><m>\mathbb{Q}</m></usage>
    <description>rational numbers</description>
  </notation>
  <statement>
    <p>
      The <term>empty set</term> is the set containing no objects, denoted <m>\{\ \}</m> or <m>\emptyset</m>.
    </p>
    <p>
      We denote by <m>\mathbb{R}</m> the set of all real numbers. The <term>integers</term> <m>\Z</m> and <term>rational numbers</term> <m>\mathbb{Q}</m> are the subsets of <m>\R</m> defined as
      <md>
        <mrow>\mathbb{Z} \amp =\{0,1,2,3,\dots\}\cup \{-1,-2,-3,\dots\} </mrow>
        <mrow> \mathbb{Q} \amp = \{x\in\mathbb{R}\colon x=\tfrac{m}{n} \text{ for some } m,n\in\Z\}  </mrow>
      </md>.
      This yields the following chain of subsets:
      <men xml:id="eq_chain_numbersystems">
        \mathbb{Z}\subseteq\mathbb{Q}\subseteq\mathbb{R}
      </men>.
      Additionally, for any integer <m>a\in \Z</m> we denote by <m>\Z_{\geq a}</m> the set of all integers <m>n\geq a</m>: <ie/>, 
      <men xml:id="eq_ints_greater_than_a">
        \Z_{\geq a}=\{n\in \Z\colon n\geq a\}=\{a,a+1,a+2,\dots, \}
      </men>.
    Lastly, we denote by <m>\Z_+</m> the set of all positive integers: <ie/>,
    <me>
      \Z_+=\{n\in \Z\colon n\geq 0\}=\{1,2,\dots, \}
    </me>.
    </p>
  </statement>
</definition>
<p>
  The <em>power set</em> of a set <m>A</m> is the set of all subsets of <m>A</m>. 
</p>
<definition xml:id="d_power_set">
  <title>Power set</title>
  <idx><h>power set</h></idx>
  <notation>
    <usage><m>\mathcal{P}(A)</m></usage>
    <description>power set of <m>A</m></description>
  </notation>
  
  <statement>
    <p>
      Given a set <m>A</m>, its <term>power set</term> <m>\mathcal{P}(A)</m> is defined as the set of all subsets of <m>A</m>.
    </p>
  </statement>
</definition>
<example xml:id="eg_power_set">
  <title>Power set</title>
  <statement>
    <p>
      Let <m>A=\{a,7\}</m>. The power set <m>\mathcal{P}(A)</m> is the set of all subsets of <m>A</m>. We can enumerate <m>\mathcal{P}(A)</m> systematically by listing all the subsets in order of increasing cardinality. There is one subset of <m>A</m> containing zero elements: namely, the empty set <m>\emptyset</m>. The two subsets of <m>A</m> containing exactly one element are <m>\{a\}</m> and <m>\{7\}</m>. Lastly, the unique subset of <m>A</m> containing two elements is <m>A</m> itself. We conclude that
      <me>
        \mathcal{P}(A)=\{ \emptyset, \{a\}, \{7\}, \{a,7\}\}
      </me>.
      In general if <m>A</m> has cardinality <m>\abs{A}=n</m>, then <m>\mathcal{P}(A)</m> has cardinality <m>\abs{\mathcal{P}(A)}=2^n</m>.
    </p>
  </statement>
</example>


    </subsection>
    <subsection xml:id="ss_functions">
      <title>Functions</title>
      <definition xml:id="d_function">
          <title>Functions</title>
          <idx><h>function</h></idx>
          <notation>
            <usage><m>f\colon A\rightarrow B</m></usage>
            <description>a function from <m>A</m> to <m>B</m></description>
          </notation>
          <statement>
            <p>
            Let <m>X</m> and <m>Y</m> be two sets. A <term>function from <m>X</m> to <m>Y</m></term>, denoted <m>f\colon X\rightarrow Y</m>, is a rule which, given any <term>input</term> <m>x\in X</m>, returns an <term>output</term> <m>y\in Y</m>. In this case we write <m>y=f(x)</m> and call <m>y</m> the <term>image of <m>x</m> under <m>f</m></term>, or the <term>value of <m>f</m> at <m>x</m> </term>. Similarly, we say <m>f</m> <term>maps</term> (or <term>sends</term>) the input <m>x</m> to the output <m>y</m>.
            </p>
            <p>
              The set <m>X</m> is called the <term>domain</term> of <m>f</m>; the set <m>Y</m> is called the <term>codomain</term> of <m>f</m>.
            </p>
            <p>
              When we wish to indicate what rule defines the function, we use the elaborated notation
              <md>
                <mrow>f\colon X \amp\rightarrow Y</mrow>
                <mrow> x \amp\mapsto f(x)</mrow>
              </md>.
              This is read as <q>The function <m>f</m> with domain <m>X</m> and codomain <m>Y</m> maps an input <m>x</m> to the output <m>f(x)</m></q>.
            </p>
          </statement>
        </definition>
        <example>
            <statement>
              <p>
                Consider the function
                <md>
                  <mrow>f\colon \mathbb{Z}\amp \rightarrow \mathbb{Z}</mrow>
                  <mrow> x\amp\mapsto x^2 </mrow>
                </md>.
                This function has domain and codomain equal to <m>\mathbb{Z}</m> and maps an integer to its square.
              </p>
            </statement>
          </example>
          <example xml:id="eg_addition_mult_as_functions">
            <title>Arithmetic operations as functions</title>
            <statement>
              <p>
                Our familiar arithmetic operations can be expressed as functions whose inputs are pairs of numbers: addition is the function
                <md>
                  <mrow>a\colon \R\times \R \amp\rightarrow \R </mrow>
                  <mrow> (x,y) \amp\mapsto x+y </mrow>
                </md>
                and multiplication is the function
                <md>
                  <mrow>m\colon\mathbb{R}\times \mathbb{R} \amp \rightarrow \mathbb{R}</mrow>
                  <mrow> (x,y)\amp\mapsto  xy </mrow>
                </md>
              </p>
            </statement>

          </example>
            <remark xml:id="rm_function_as_relation">
          <p>
            Invoking the notion of a rule in the definition of a function is admittedly somewhat vague. A more precise definition can be given using the Cartesian product. Namely, given sets <m>X</m> and <m>Y</m>, we define a function <m>f\colon X\rightarrow Y</m> to be a subset <m>f\subseteq X\times Y</m> satisfying the following property: for all <m>x\in X</m> there is a unique element <m>(x,y)\in f</m>. The uniqueness of the pair <m>(x,y)</m> then allows us to define the value <m>f(x)</m> of <m>f</m> at <m>x</m> as <m>y</m>, denoted <m>f(x)=y</m>.
          </p>
        </remark>
        <p>
        As with sets, we are obliged to specify what we mean for two functions to be equal. The definition below makes clear how the the domain and codomain, as well as the rule that takes inputs to outputs, are all essential ingredients of a function.
        </p>
          <definition xml:id="d_function_equality">
            <title>Function equality</title>
            <idx><h>function</h><h>equality</h></idx>
            <statement>
              <p>
              Functions <m>f</m> and <m>g</m> are <term>equal</term> if
              <ol marker="i">
                <li>
                  <p>
                    they have the same domain <m>X</m> and codomain <m>Y</m>, and
                  </p>
                </li>
                <li>
                  <p>
                    for all <m>x\in X</m>, we have <m>f(x)=g(x)</m>.
                  </p>
                </li>
              </ol>
              </p>
            </statement>
          </definition>
          <definition xml:id="d_image">
      <title>Image of a set</title>
      <idx><h>function</h><h>image of a set</h></idx>
      <idx><h>function</h><h>image</h></idx>
      <notation>
        <usage><m>f(A)</m></usage>
        <description>image of the set <m>A</m> under <m>f</m></description>
      </notation>
      <notation>
        <usage><m>\operatorname{im} f</m></usage>
        <description>image of a function <m>f</m></description>
      </notation>
      <statement>
        <p>
        Given a function <m>f\colon X\rightarrow Y</m> and a subset <m>A \subseteq X</m>, the <term>image of <m>A</m> under <m>f</m></term>, denoted <m>f(A)</m>, is defined as
        <me>
          f(A)=\left\{ y \in Y \colon f(a)=y \text{ for some } a \in A \right\}
        </me>.
        In other words, <m>f(A)</m> is the set of all outputs <m>f(a)</m>,  where <m>a\in X</m>.
       </p>
        <p>
        The <term>image of <m>f</m></term>, denoted <m>\operatorname{im} f</m>, is the set of <em>all</em> outputs of <m>f</m>: <ie />,
        <me>
          \operatorname{im} f=f(X)=\left\{ y \in Y \colon f(x)=y \text{ for some } x \in X \right\}
        </me>.
        </p>

      </statement>
    </definition>
    <definition xml:id="d_preimage_of_set">
      <title>Preimage of set</title>
      <idx><h>preimage</h><h>of a set</h></idx>
      <notation>
        <usage><m>f^{-1}(A)</m></usage>
        <description>preimage of <m>A</m> under <m>f</m></description>
      </notation>
      <statement>
        <p>
          Given a function <m>f\colon X\rightarrow Y</m>, the <term>preimage</term> of a subset <m>A\subseteq Y</m> is the subset <m>f^{-1}(A)\subseteq X</m> defined as
          <me>
            f^{-1}(A)=\{x\in X\colon f(x)\in A\}
          </me>.
          In plain English: the preimage of <m>A</m> under <m>f</m> is the set of all <m>x\in X</m> whose image under <m>f</m> lies in <m>A</m>. 
        </p>
      </statement>
    </definition>
    <definition xml:id="d_injective_surjective_bijective">
      <title>Injective, surjective, bijective</title>
      <idx><h>invertible</h><h>function</h></idx>
      <idx><h>bijective</h><h>function</h></idx>
      <idx><h>injective</h><h>function</h></idx>
      <idx><h>surjective</h><h>function</h></idx>
      <idx><h>one-to-one</h><h>function</h></idx>
      <idx><h>onto</h><h>function</h></idx>
      <idx><h>one-to-one correspondence</h></idx>
      <statement>
        <p>
          Let <m>f\colon X\rightarrow Y</m> be a function.
          <ul>
            <li>
              <p>
                The function <m>f</m> is <term>injective</term> (or <term>one-to-one</term>) if for all <m>x,x'\in X</m>, if <m>f(x)=f(x')</m>, then <m>x=x'</m>: equivalently, if <m>x\ne x'</m>, then <m>f(x)\ne f(x')</m>.
              </p>
            </li>
            <li>
              <p>
                The function <m>f</m> is <term>surjective</term> (or <term>onto</term>) if for all <m>y\in Y</m>, there is an <m>x\in X</m> such that <m>f(x)=y</m>: equivalently, <m>\im f=Y</m>.
              </p>
            </li>
            <li>
              <p>
                The function <m>f</m> is <term>bijective</term> (or a <term>one-to-one correspondence</term>) if it is injective and surjective.
              </p>
            </li>
          </ul>
        </p>
      </statement>
    </definition>
    <example>
      <title>Role of domain and codomain in injectivity and surjectivity</title>
      <statement>
        <p>
          Consider the following three functions
          <md>
            <mrow>f\colon \R \amp\rightarrow \R \amp g\colon [0,\infty)\amp\rightarrow \R \amp h\colon [0,\infty)\amp \rightarrow [0,\infty) </mrow>
            <mrow> x \amp\mapsto x^2 \amp x \amp\mapsto x^2 \amp x \amp\mapsto x^2 \amp </mrow>
          </md>.
          Although all three functions are defined using the same rule (<m>x\mapsto x^2</m>), they are not equal thanks to their differing domains and/or codomains. The choice of domain and codomain in these examples also plays a crucial role in determining whether the function is injective and/or surjective. The function <m>f</m> is neither injective (<m>f(-2)=f(2)=4</m>) nor surjective (<m>f(X)=[0,\infty)\ne \R</m>); the function <m>g</m> is injective but not surjective; the function <m>h</m> is both injective and surjective, hence bijective.
        </p>
      </statement>
    </example>
    <definition xml:id="d_function_composition">
    <title>Function composition</title>
    <idx><h>function</h><h>composition</h></idx>
    <notation>
      <usage><m>f\circ g</m></usage>
      <description>the composition of <m>f</m> and <m>g</m></description>
    </notation>
    <statement>
      <p>
        Suppose <m>f\colon Z\rightarrow W</m> and <m>g\colon X\rightarrow Y</m> are functions satisfying <m>Y\subseteq Z</m>.  The <term>composition of <m>f</m> and <m>g</m></term> is the function <m>f\circ g\colon X\rightarrow W</m> defined as
        <m>
          f\circ g\, (x)=f(g(x))
        </m>, for all <m>x\in X</m>.
      </p>
    </statement>
  </definition>
  <definition xml:id="d_invertible_function">
    <title>Identity and inverse functions</title>
    <idx><h>function</h><h>invertible</h></idx>
    <idx><h>function</h><h>inverse</h></idx>
    <idx><h>function</h><h>identity</h></idx>
    
    <statement>
      <p>
        For any set <m>X</m> the <term>identity function</term> on <m>X</m> is the function <m>\id_X\colon X\rightarrow X</m> defined as <m>\id_X(x)=x</m> for all <m>x\in X</m>.
      </p>
      <p>
        A function <m>f\colon X\rightarrow Y</m> is <term>invertible</term> if there is a function <m>g\colon Y\rightarrow X</m> satisfying <m>g\circ f=\id_X</m> and <m>f\circ g=\id_Y</m>: <ie />,
        <md>
          <mrow>g(f(x))\amp =x  \text{ for all } x\in X, </mrow>
          <mrow> f(g(y))\amp=y  \text{ for all } y\in Y </mrow>
        </md>.
      The function <m>g</m> in this case is called the <term>inverse</term> of <m>f</m>, denoted <m>g=f^{-1}</m>.
      </p>
    </statement>
  </definition>
    <theorem xml:id="th_invertible_bijective">
      <title>Invertible is equivalent to bijective</title>


      <statement>
        <p>
          A function <m>f\colon X\rightarrow Y</m> is invertible if and only if it is bijective.
        </p>
      </statement>
    </theorem>
    <!-- <proof>
      <p>
        The proof of this theorem is left as an example of proving <q>if and only if</q> statements. See <xref ref="ex_invertible_bijective"/>.
      </p>
    </proof> -->

</subsection>
<subsection xml:id="ss_tuples_cart_prod">
<title>Tuples and Cartesian product</title>
<p>
  Next we introduce the notion of a <em>tuple</em>, which will both provide a rigorous foundation for the notion of an ordered sequence (or list), and vastly generalize that notion. Interestingly, as revealed in the next definition, a tuple is just a function by another name.
</p>
<definition xml:id="d_Ituple">
<title>Tuple</title>
  <idx><h>tuple</h><h>arbitrary</h></idx>
  <notation>
    <usage><m>f=(f(i))_{i\in I}</m></usage>
    <description>tuple indexed by <m>I</m></description>
  </notation>
  <statement>
    <p>
      Let <m>I</m> and <m>X</m> be sets. An <term><m>X</m>-valued tuple indexed by <m>I</m></term> is a function
      <m>
        f\colon I\rightarrow X
      </m>.
      We call <m>I</m> the <term>indexing set</term> of the tuple <m>f</m>, and for all <m>i\in I</m>, we call  <m>f(i)</m> the <m>i</m>-th <term>entry</term> (or <term>coordinate</term>) of <m>f</m>. Furthermore, we will write <m>f=(x_i)_{i\in I}</m> to denote the function <m>f\colon I\rightarrow X</m> defined as <m>f(i)=x_i</m> for all <m>i\in I</m>.
    </p>
  </statement>
</definition>
<remark>
  <title>Tuple versus function</title>
  <p>
    As mentioned above, the introduction of tuple language and notation simply gives us another way of conceptualizing a function <m>f\colon I\rightarrow X</m>: one that let's us think of a function as a sort of sequence. Being able to fluently move between these two conceptions requires a little bit of practice. The following correspondence diagram can help in this regard:
  </p>
  <figure xml:id="fig_tuple_function">
    <caption>Correspondence between functions and tuples</caption>
  <image width="50%">
      <shortdescription>Correspondence between functions and tuples</shortdescription>
      <latex-image>
        \begin{tikzcd}  
 \text{Functions}\arrow[r,leftrightarrow] \amp \text{Tuples} \\
 f \arrow[r,mapsto] \amp (f(i))_{i\in I} \\
 f(i)=x_i \amp (x_i)_{i\in I} \arrow[l,mapsto]
        \end{tikzcd}
      </latex-image>
    </image>
  </figure>
  
</remark>
<remark>
<title>Tuple equality</title>
  <p>
    Fix a set <m>X</m>, and let <m>f=(x_i)_{i\in I}</m> and <m>g=(y_i)_{j\in J}</m> be two tuples with entries in <m>X</m>. When are these tuples equal? The answer is provided by our definition of <xref ref="d_function_equality" text="custom">function equality</xref>. By definition, the functions <m>f\colon I\rightarrow X</m> and <m>g\colon J\rightarrow X</m> are equal if and only if (i) <m>I=J</m> (the indexing sets are equal), and (ii) <m>f(i)=g(i)</m> for all <m>i\in I</m>. In terms of our tuple notation this means <m>(x_i)_{i\in I}=(y_i)_{i\in I}</m> if and only if <m>x_i=y_i</m> for all <m>i\in I</m>: <ie/>, two tuples with the same indexing set <m>I</m> are equal if and only if their <m>i</m>-th coordinate is equal for all <m>i\in I</m>. Sound familiar? This is precisely how we define equality between two finite (ordered)sequences <m>(x_1,x_2,\dots, x_n)</m> and <m>(y_1,y_2,\dots, y_n)</m>. We make this observation more official in the next definition. 
  </p>
</remark>
<definition xml:id="d_ntuple">
<title><m>n</m>-tuples</title>
<statement>
<p>
Let <m>X</m> be a set. An <term><m>n</m>-tuple</term> (or <term>sequence of length <m>n</m></term>)   with entries in <m>A</m> is a tuple 
<me>
  f\colon \{1,2,\dots, n\}\rightarrow A
</me>
indexed by the set <m>I=\{1,2,\dots, n\}</m>. 
We write 
<m>
  f=(x_i)_{i=1}^n
</m>
or 
<m>f=(x_1,x_2,\dots, x_n)</m> to denote the <m>n</m>-tuple <m>f</m> whose <m>i</m>-th entry is <m>f(i)=x_i</m> for all <m>1\leq i\leq n</m>. 
</p>
</statement>
</definition>
 <remark xml:id="rm_pairs_triples">
  <p>
   We have more suggestive names for <m>n</m>-tuples when <m>n</m> is small: a 2-tuple <m>(a,b)</m> is called a pair, a 3-tuple <m>(a,b,c)</m> is called a triple, a 4-tuple <m>(a,b,c,d)</m> is called a quadruple, <etc />. We will use the generic term <q>tuple</q> to designate a <m>n</m>-tuple of unspecified length.
  </p>
</remark>
<remark xml:id="rm_tuple_ordered">
<p>
  Observe how tuples capture the notion of an <em>ordered</em> collection of object. For example, whereas the sets <m>\{1, 1, 2, 3\}</m> and <m>\{1,2,2,3\}</m> are all equal to one another, the 4-tuples <m>(1,1,2,3)</m> and <m>(1,2,2,3)</m> are not: they differ in their second entries.
</p>
</remark>
<p>
  The last definition indicates how our notion of tuple generalizes that of a finite sequence. As the next example illustrates, <em>infinite sequences</em> can also be considered as simply a particular type of tuple: one with indexing set <m>\Z_{\geq a}=\{a,a+1,\dots\}</m>. 
</p>
<definition xml:id="d_infinite_sequence">
<title>Infinite sequence</title>
<statement>
<p>
Let <m>X</m> be a set. An <term>infinite sequence</term> with entries in <m>X</m> is a tuple of the form 
<me>
  f\colon \Z_{\geq a}\rightarrow A
</me>,
for some <m>a\in \Z</m>. We write <m>f=(x_i)_{i=a}^\infty</m> or <m>f=(x_a,x_{a+1},\dots)</m> to denote the tuple <m>f\colon \Z_{\geq a}\rightarrow A</m> whose <m>i</m>-th entry is <m>f(i)=x_i</m> for all <m>i\in \Z_{\geq a}</m>.
</p>

</statement>
</definition>
<remark>
<title>Indexed collection of sets</title>
<p>
  In mathematics we often deal with <em>indexed collections</em> of sets: that is, a collection of sets <m>A_i</m> indexed by some set <m>I</m>. When all of the sets <m>A_i</m> are subsets of a common set <m>X</m>, we can make this notion rigorous with the concept of a tuple: namely, a collection of subsets of <m>X</m> indexed by <m>I</m> is just a tuple <m>f=(A_i)_{i\in I}</m>, where each <m>A_i=f(i)</m> is a subset of <m>X</m>. More technically, this is just a function 
  <me>
    f\colon I\rightarrow \mathcal{P}(X)
  </me>
  from <m>I</m> to the power set of <m>X</m>.
</p>
</remark>


<definition xml:id="d_cartesian_product_arbitrary">
  <title>Cartesian product</title>
  <idx><h>Cartesian product</h></idx>
  <notation>
    <usage><m>\prod_{i\in I}A_i</m></usage>
    <description>Cartesian product of the sets <m>A_i</m></description>
  </notation>
  <notation>
    <usage><m>A^n</m></usage>
    <description><m>n</m>-fold Cartesian product of <m>A</m></description>
  </notation>
  <notation>
    <usage><m>A^\infty</m></usage>
    <description>Cartesian product <m>A^{\Z_+}</m></description>
  </notation>

  
  <statement>
    <p>
      Let <m>X</m> be a set, and let <m>(A_i)_{i\in I}</m> be a collection of subsets <m>A_i\subseteq X</m> indexed by the set <m>I</m>. The <term>Cartesian product</term> <m>\prod_{i\in I}A_i</m> of this collection is defined as
      <md>
      <mrow> \prod_{i\in I}A_i\amp =\{f\colon I\rightarrow X\colon f(i)\in A_i \text{ for all } i\in I\} </mrow>
      <mrow>  \amp =\{(x_i)_{i\in I}\colon x_i\in A_i \text{ for all } i\in I\}</mrow>
      </md>.
      In other words, the Cartesian product is the set of all <m>I</m>-tuples with coordinates in <m>X</m> whose <m>i</m>-th coordinate is an element of <m>A_i</m> for all <m>i\in I</m>.
    </p>
    <p>
     When <m>A_i=A</m> for all <m>i\in I</m>, we denote <m>\prod_{i\in I}A</m> as <m>A^I</m>.
    </p>
    <p>
  Additionally, in the special case where <m>I=\{1,2,\dots, n\}</m> we write 
  <md>
    <mrow>\prod_{i\in \{1,2,\dots, n\}}A_i \amp =A_1\times A_2\times \cdots A_n \amp </mrow>
  </md>
  and 
  <me>
    A^{\{1,2,\dots, n\}}=A^n
  </me>,
  and we call <m>A^n</m> the <term><m>n</m>-fold Cartesian product of <m>A</m></term>.
  </p>
  <p>
  Lastly, in the special case where <m>I=\Z_{+}=\{1,2,\dots\}</m> we write 
  <md>
    <mrow>\prod_{i\in \Z_{+}}A_i \amp=A_1\times A_2\times \cdots \amp  </mrow>
  </md>
  and 
  <me>
    A^{\Z_+}=A^\infty
  </me>.
</p>
  </statement>
</definition>
   
<p>
  The notion of a Cartesian product can be generalized to an infinite list of sets <m>A_1, A_2, \dots</m>, and indeed to any collection <m>\{A_i\}_{i\in I}</m> indexed by a set <m>I</m>.
</p>

</subsection>
<subsection xml:id="ss_cardinality">
  <title>Cardinality and countability</title>
  <definition xml:id="d_cardinality">
    <title>Cardinality</title>
    <idx><h>cardinality</h></idx>
    <idx><h>finite set</h></idx>
    <idx><h>infinite set</h></idx>
    <idx><h>countably infinite set</h></idx>
    <idx><h>countable set</h></idx>
    <idx><h>uncountable set</h></idx>
    <notation>
      <usage><m>\abs{A}</m></usage>
      <description>cardinality of set <m>A</m></description>
    </notation>
    <statement>
      <p>
        Let <m>X</m> be a set.
      
      <ol>
        <li>
          <title>Finite and infinite sets</title>
          <p>
            The set <m>X</m> is <term>finite</term> if either <m>X=\emptyset</m> or there is a bijection <m>f\colon X\rightarrow \{1,2,\dots, n\}</m> for some positive integer <m>n</m>. Roughly speaking, the <term>cardinality</term> of a finite set <m>X</m>, denoted <m>\abs{X}</m>, is the number of distinct elements it contains. In more detail if <m>X=\emptyset</m>, then <m>\abs{X}=0</m> by definition; if there is a bijection <m>f\colon X\rightarrow \{1,2,\dots, n\}</m>, then <m>\abs{X}=n</m>.
          </p>
          <p>
             The set <m>X</m> is <term>infinite</term> if it is not finite. In this case <m>X</m> is said to have <term>infinite cardinality</term>.
          </p>
        </li>
        <li>
          <title>Countable and uncountable sets</title>
          <p>
            The set <m>X</m> is <term>countably infinite</term> if there is a bijection <m>f\colon X\rightarrow \Z_{+}</m>, where <m>\Z_+=\{1,2,\dots, \}</m> is the set of all positive integers; it is <term>countable</term> if it is either finite or countable infinite.
          </p>
          <p>
            The set <m>X</m> is <term>uncountable</term> if it is not countable.
          </p>
        </li>
      </ol>
      </p>
    </statement>
  </definition>
</subsection>

</section>
